@model AMPMVC5.Models.Location
<script src="http://maps.google.com/maps/api/js?sensor=true" type="text/javascript"></script>


<script>
    var locations = @Html.Raw(Json.Encode(Model.ShowallLocation));
    
    alert(JSON.stringify(locations));
</script>

<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>
<br />
<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 550px;"></div>

<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
    <section class="scripts">

        <script type="text/javascript">

    //<!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
        var Tunisie = new google.maps.LatLng(12.9716, 77.5946);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 12,
            center: Tunisie,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
       // var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);


        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function (p) {
                var LatLng = new google.maps.LatLng(p.coords.latitude, p.coords.longitude);
                var mapOptions = {
                    center: LatLng,
                    zoom: 13,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

                // a sample list of JSON encoded data of places to visit in Tunisia
                // you can either make up a JSON list server side, or call it from a controller using JSONResult
                var data = [
                          { "Id": 1, "PlaceName": "BOI", "GeoLong": "12.938100", "GeoLat": "77.555623", "description": 'Bank Of India' },
                          { "Id": 2, "PlaceName": "BookMyShow", "GeoLong": "12.974747", "GeoLat": "77.601647", "description": 'Ticketing Service' },
                          { "Id": 3, "PlaceName": "Home", "GeoLong": "12.937915", "GeoLat": "77.556032", "description": 'Home' },
                          { "Id": 4, "PlaceName": "Mumbai", "GeoLong": "18.964700", "GeoLat": "18.964700", "description": 'Mumbai formerly Bombay, is the capital city of the Indian state of Maharashtra.' },
                          { "Id": 5, "PlaceName": "RelienceFresh", "GeoLong": "12.938234", "GeoLat": "77.553953", "description": 'Relience Fresh' },
                          { "Id": 6, "PlaceName": "Samrudhi", "GeoLong": "12.938233", "GeoLat": "77.553953", "description": 'Samrudhi Ventures' }
                ];

                // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
                $.each(data, function (i, item) {
                    var marker = new google.maps.Marker({
                        'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                        'map': map,
                        'title': item.PlaceName
                    });

                    // Make the marker-pin blue!
                    marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

                    // put in some information about each json object - in this case, the opening hours.
                    var infowindow = new google.maps.InfoWindow({
                        content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
                    });

                    // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
                    google.maps.event.addListener(marker, 'click', function () {
                        infowindow.open(map, marker);
                    });

                })
               

            });
        } else {
            alert('Geo Location feature is not supported in this browser.');
        }

       
    }


        </script>
    </section>
}
